///////////////////////////////////////////////////////////DUT//////////////////////////////////////////////////////////////////////////////
module full_adder(a,b,c_in,s,c_out);
  input a,b,c_in;  // by default wire
  output s,c_out;
  inout s_intermediate, c_intermediate,c_intermediate2;
  
  half_adder h1(a,b,s_intermediate,c_intermediate);
  half_adder h2(s_intermediate,c_in,s,c_intermediate2);
  assign c_out = c_intermediate| c_intermediate2;    //or(c_out,c_intermediate,c_intermediate2);
  
endmodule

module half_adder(p,q,r,s);
  input p,q;
  output r,s;
  
  assign r = p^q;
  assign s = p&q;
  
endmodule

//////////////////////////////////////////////////////////////////////////Test bench//////////////////////////////////////////////////////////////////////////////

// Code your testbench here
// or browse Examples
module full_adder_tb;
  reg a,b,c_in;
  wire s,c_out;
  
  full_adder full_adder_tb(a,b,c_in,s,c_out);
  
  initial
    begin
      {a,b,c_in}=0;
      #2{a,b,c_in}=1;
      #2{a,b,c_in}=2;
      #2{a,b,c_in}=3;
      #2{a,b,c_in}=4;
      #2{a,b,c_in}=5;
      #2{a,b,c_in}=6;
      #2{a,b,c_in}=7;
    end 
  
  initial 
    begin
      $dumpfile("full_adder.vcd");
      $dumpvars(0,a,b,c_in,s,c_out);
  end
  
endmodule

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
